service: netflow-logs
provider:
  name: aws
  runtime: python2.7
  timeout: ${file(./serverless.env.yml):${opt:stage}.TIME_OUT}
  iamRoleStatements:
    - Effect: Allow
      Action:
      - "logs:CreateLogGroup"
      Resource: "arn:aws:logs:*:*:*"
    - Effect: Allow
      Action:
      - "logs:CreateLogStream"
      Resource: "arn:aws:logs:*:*:*"
    - Effect: Allow
      Action:
      - "logs:PutLogEvents"
      Resource: "arn:aws:logs:*:*:*"
    - Effect: Allow
      Action:
      - "sqs:SendMessage"
      Resource: "arn:aws:sqs:${file(./serverless.env.yml):${opt:stage}.REGION}:${opt:ACCOUNT_ID}:${file(./serverless.env.yml):${opt:stage}.ANALYTICS_QUEUE_NAME}"

    - Effect: Allow
      Action:
      - "sqs:SendMessage"
      Resource: "arn:aws:sqs:${file(./serverless.env.yml):${opt:stage}.REGION}:${opt:ACCOUNT_ID}:${file(./serverless.env.yml):${opt:stage}.DATA_LAKE_SERIES_QUEUE}"

  environment:
    REGION: ${opt:region}
    ANALYTICS_QUEUE_NAME: https://sqs.${opt:region}.amazonaws.com/${opt:ACCOUNT_ID}/${file(./serverless.env.yml):${opt:stage}.ANALYTICS_QUEUE_NAME}
    DATA_LAKE_SERIES_QUEUE: https://sqs.${opt:region}.amazonaws.com/${opt:ACCOUNT_ID}/${file(./serverless.env.yml):${opt:stage}.DATA_LAKE_SERIES_QUEUE}
functions:
  SampleFlowLog:
    handler: handler.create
    description: Account VPC flow for ${file(./serverless.env.yml):${opt:stage}.ENVIRONMENT} environment
    name: flow_logs_${file(./serverless.env.yml):${opt:stage}.ENVIRONMENT}
    events:
     - sns: flow_log_source
    tags:
      Role: Security
